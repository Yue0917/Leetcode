// normal solution
public int maxSubArray(int[] nums) {
        
        int sum = 0;
        int max = nums[0];
        for(int i = 0; i < nums.length; i ++){
            sum += nums[i];
            if(sum > max){
                 max = sum;
            }
            if(sum < 0){
                 sum = 0;
            }
        }
        return max; 
}


//DP
public int maxSubArray(int[] nums) {
        int len = nums.length;
        int[] dp = new int[len]; //dp[i] means the maximum subarray ending with nums[i]
        //initial conditions
        dp[0] = nums[0];
        int max = dp[0];
        
        for(int i = 1; i < len; i ++){ //order
            if(dp[i-1] < 0) dp[i] = nums[i];
            else dp[i] = nums[i] + dp[i-1];
            max = Math.max(max, dp[i]);
        }
        
        
        return max;
}
